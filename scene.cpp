#include "scene.h"
void scene::move(const int x, const int y) {
	if ((map[playerpos.gety() + y][playerpos.getx() + x]) == '.') {
		playerpos.sety(playerpos.gety() + y);
		if (playerpos.gety() < 0) {
			playerpos.sety(0);
		}
		if (playerpos.gety() > H - 1) {
			playerpos.sety(H - 1);
		}
		playerpos.setx(playerpos.getx() + x);
		if (playerpos.getx() < 0) {
			playerpos.setx(0);
		}
		if (playerpos.getx() > W - 1) {
			playerpos.setx(W - 1);
		}
	}
}
scene::scene(int x)
{
	playerpos.sety(1);
	playerpos.setx(1);
	switch (x)
	{
	case 1:
		map = {
		{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',},
		{'#','.','.','.','.','x','#','x','x','x','#','.','.','.','p','#',},
		{'#','.','.','.','.','x','#','x','x','x','#','.','.','.','.','#',},
		{'#','.','.','.','.','x','#','x','x','x','#','.','.','.','.','#',},
		{'#','.','p','.','.','x','x','x','x','x','#','.','#','.','.','#',},
		{'#','.','.','#','.','x','x','x','x','x','#','.','.','.','.','#',},
		{'#','.','.','#','.','x','x','x','x','x','#','.','.','.','.','#',},
		{'#','#','#','#','.','x','x','#','#','#','#','.','.','.','.','#',},
		{'#','.','.','.','.','#','.','.','.','.','.','.','.','.','.','#',},
		{'#','.','.','.','.','#','.','.','.','.','.','.','#','.','.','#',},
		{'#','.','.','.','.','.','.','.','.','.','.','.','#','.','.','#',},
		{'w','w','f','w','.','.','#','#','.','#','#','#','#','.','.','#',},
		{'w','f','f','w','.','.','.','.','.','#','.','.','.','.','.','#',},
		{'w','f','f','w','.','.','.','.','.','.','.','.','.','.','.','#',},
		{'w','f','f','w',' ','.','.','.','.','#','.','.','.','.','.','#',},
		{'w','w','w','w','#','#','#','#','#','#','#','#','#','#','#','#',},
		};
		H = map.size();
		W = map[0].size();
		break;
	default:
		break;
	}

}

void scene::gridgen()const
{
	
	for (int col = 0; col < H; col++)
	{
		for (int row = 0; row < W; row++)
		{
			if (playerpos.getx() == row && playerpos.gety() == col) {
				std::cout << "\033[1;35mP\033[0m"<<"   ";
			}
			else {
				std::cout << map[col][row]<<"   ";
			}
		}
		std::cout << std::endl;
	}
}
